buildscript {
    ext {
        kotlinVersion = '1.2.51'
        springBootVersion = '2.0.0.RELEASE'
        asciidoctorPluginVersion = '1.5.3'
        restDocsVersion = '2.0.0.RELEASE'
    }
    repositories {
        mavenCentral()
        jcenter()
    }
    dependencies {

        classpath "org.jetbrains.kotlin:kotlin-noarg:$kotlinVersion"
        classpath("org.jetbrains.kotlin:kotlin-allopen:${kotlinVersion}")
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:${kotlinVersion}"
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
        classpath("org.asciidoctor:asciidoctor-gradle-plugin:${asciidoctorPluginVersion}")
    }
}


allprojects(){

    ext{
        jacksonVersion = '2.9.5'
    }
    apply plugin: 'kotlin'
    apply plugin: 'kotlin-spring'
    apply plugin: 'org.jetbrains.kotlin.jvm'
    apply plugin: 'eclipse'
    apply plugin: 'kotlin-jpa'
    apply plugin: 'io.spring.dependency-management'

    compileKotlin {
        kotlinOptions {
            freeCompilerArgs = ["-Xjsr305=strict"]
            jvmTarget = "1.8"
        }
    }
    compileTestKotlin {
        kotlinOptions {
            freeCompilerArgs = ["-Xjsr305=strict"]
            jvmTarget = "1.8"
        }
    }

    repositories {
        mavenCentral()
    }

    dependencyManagement {
        imports { mavenBom("org.springframework.boot:spring-boot-dependencies:${springBootVersion}") }
    }



    dependencies {
        compile('org.springframework.boot:spring-boot-starter-actuator')
        compile('org.springframework.boot:spring-boot-starter-aop')
        compile('org.springframework.boot:spring-boot-starter-data-jpa')
        compile('org.springframework.boot:spring-boot-starter-mail')
        compile('org.springframework.boot:spring-boot-starter-security')
        compile('org.springframework.boot:spring-boot-starter-web')

        compile("org.jetbrains.kotlin:kotlin-stdlib")
        compile('org.jetbrains.kotlin:kotlin-stdlib-jdk8')
        compile("org.jetbrains.kotlin:kotlin-reflect")
        compile('com.fasterxml.jackson.module:jackson-module-kotlin')

        compile('org.apache.commons:commons-lang3:3.7')
        compile("com.fasterxml.jackson.core:jackson-core:${jacksonVersion}")
        compile("com.fasterxml.jackson.core:jackson-databind:$jacksonVersion")
        compile("com.fasterxml.jackson.datatype:jackson-datatype-jsr310:$jacksonVersion")
        compile("com.fasterxml.jackson.datatype:jackson-datatype-jdk8:$jacksonVersion")

        compile group: 'com.itextpdf', name: 'itextpdf', version: '5.5.13'
        compile group: 'net.sf.supercsv', name: 'super-csv', version: '2.4.0'
        compile group: 'org.apache.poi', name: 'poi-ooxml', version: '3.17'
        compile group: 'org.apache.poi', name: 'poi', version: '3.17'

        compile('org.flywaydb:flyway-core')
        runtime('com.h2database:h2')
        runtime('org.postgresql:postgresql')

        testCompile('org.springframework.boot:spring-boot-starter-test')
        testCompile('org.springframework.security:spring-security-test')

        testCompile "org.jetbrains.kotlin:kotlin-test-junit:$kotlinVersion"
        testCompile "org.jetbrains.kotlin:kotlin-test:$kotlinVersion"
    }
}


project(':api-rest'){

    ext{
        snippetsDir = file('build/generated-snippets')
    }

    apply plugin: 'application'
    apply plugin: 'org.springframework.boot'
    apply plugin: 'org.asciidoctor.convert'
    mainClassName = 'br.com.jeanfbs.MainApplicationKt'

    bootRun {
        systemProperties = ["local.dc": "dev", "spring.profiles.active": "dev"]
    }

    bootJar {
        dependsOn asciidoctor
        from ("${asciidoctor.outputDir}/html5") {
            into 'static/docs'
        }
        manifest {
            attributes 'Implementation-Version': project.version
        }
    }

    test {
        outputs.dir snippetsDir
    }

    asciidoctor {
        inputs.dir snippetsDir
        dependsOn test
        attributes \
        'build-gradle': file('build.gradle'),
                'sourcedir': project.sourceSets.main.java.srcDirs[0],
                'version': project.version,
                'toc': 'left',
                'icons': 'font',
                'setanchors': '',
                'idprefix': '',
                'idseparator': '-',
                'docinfo1': ''
    }

    build.dependsOn asciidoctor
    jar.enabled = true

    dependencies{

        compile project(':security')
        testCompile('org.springframework.restdocs:spring-restdocs-mockmvc')
        asciidoctor "org.springframework.restdocs:spring-restdocs-asciidoctor:${restDocsVersion}"

    }
}


project(':security'){


    dependencies{
        compile group: 'io.jsonwebtoken', name: 'jjwt', version: '0.9.1'
    }


}

task wrapper(type: Wrapper) {
    gradleVersion = '4.7'
}